<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="globalSignIn" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="signInSignUp" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="globalUsername" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="signInWrongCredentials" xml:space="preserve">
    <value>Wrong username or password</value>
  </data>
  <data name="globalPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="signInForgotPassword" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="signInJoinAsGuest" xml:space="preserve">
    <value>Join game as guest</value>
  </data>
  <data name="registerSignUp" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="registerAlreadyRegistered" xml:space="preserve">
    <value>Already have an account? Sign in</value>
  </data>
  <data name="registerEmailAlreadyLinked" xml:space="preserve">
    <value>There is already an account linked to this email</value>
  </data>
  <data name="globalEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="registerExistingUsername" xml:space="preserve">
    <value>This username already exists</value>
  </data>
  <data name="registerWeakPassword" xml:space="preserve">
    <value>Weak password</value>
  </data>
  <data name="registerInvalidEmail" xml:space="preserve">
    <value>Invalid email</value>
  </data>
  <data name="mainMenuCreateGame" xml:space="preserve">
    <value>Create game</value>
  </data>
  <data name="mainMenuJoinGame" xml:space="preserve">
    <value>Join game</value>
  </data>
  <data name="mainMenuProfile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="mainMenuAchievements" xml:space="preserve">
    <value>Achievements</value>
  </data>
  <data name="mainMenuSignOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="createGameTitle" xml:space="preserve">
    <value>Create game</value>
  </data>
  <data name="createGameGameMode" xml:space="preserve">
    <value>Game mode</value>
  </data>
  <data name="createGamePieces" xml:space="preserve">
    <value>Initial pieces</value>
  </data>
  <data name="createGameMaxPlayers" xml:space="preserve">
    <value>Max players</value>
  </data>
  <data name="createGameLanguage" xml:space="preserve">
    <value>Words language</value>
  </data>
  <data name="createGameTimeLimit" xml:space="preserve">
    <value>Time limit</value>
  </data>
  <data name="createGameCreate" xml:space="preserve">
    <value>Create papaya</value>
  </data>
  <data name="gameModeTimeAttack" xml:space="preserve">
    <value>Time attack</value>
  </data>
  <data name="gameModeSuddenDeath" xml:space="preserve">
    <value>Sudden death</value>
  </data>
  <data name="gameModeClasic" xml:space="preserve">
    <value>Classic</value>
  </data>
  <data name="joinGameTitle" xml:space="preserve">
    <value>Join game</value>
  </data>
  <data name="joinGameCode" xml:space="preserve">
    <value>Game code</value>
  </data>
  <data name="joinGameJoin" xml:space="preserve">
    <value>Join</value>
  </data>
  <data name="joinGameWrongCode" xml:space="preserve">
    <value>Wrong code, try again</value>
  </data>
  <data name="gameInvitationMessage" xml:space="preserve">
    <value>is inviting you to a game</value>
  </data>
  <data name="gameInvitationAccept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="gameInvitationReject" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="changePasswordTitle" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="changePasswordCurrent" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="changePasswordNew" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="changePasswordNewConfirm" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="changePasswordSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="changePasswordPinMessage" xml:space="preserve">
    <value>We've sent a pin to your email</value>
  </data>
  <data name="globalLeaderboard" xml:space="preserve">
    <value>Leaderboard</value>
  </data>
  <data name="registerTitle" xml:space="preserve">
    <value>Create account</value>
  </data>
  <data name="globalEmptyUsername" xml:space="preserve">
    <value>Username cannot be empty</value>
  </data>
  <data name="signInEmptyPassword" xml:space="preserve">
    <value>The password cannot be empty</value>
  </data>
  <data name="registerSuccessful" xml:space="preserve">
    <value>Your account was created successfully, you can now log in</value>
  </data>
  <data name="registerSuccessfulTitle" xml:space="preserve">
    <value>User Registered</value>
  </data>
  <data name="profileTitle" xml:space="preserve">
    <value>My profile</value>
  </data>
  <data name="errorDatabaseConnection" xml:space="preserve">
    <value>Could not connect to Papayagrams services, try again later.</value>
  </data>
  <data name="errorServerConnection" xml:space="preserve">
    <value>Could not connect to server</value>
  </data>
  <data name="errorConnectionTitle" xml:space="preserve">
    <value>Error while connecting</value>
  </data>
  <data name="globalEmptyEmail" xml:space="preserve">
    <value>The email cannot be left empty</value>
  </data>
  <data name="profileStatsTitle" xml:space="preserve">
    <value>Stats</value>
  </data>
  <data name="profilePlayedGames" xml:space="preserve">
    <value>Played games</value>
  </data>
  <data name="profileOriginalGames" xml:space="preserve">
    <value>Original games played</value>
  </data>
  <data name="profileTimeAttackGames" xml:space="preserve">
    <value>Time attack games played: </value>
  </data>
  <data name="profileSuddenDeathGames" xml:space="preserve">
    <value>Sudden death games played: </value>
  </data>
  <data name="profileGamesWon" xml:space="preserve">
    <value>Games won</value>
  </data>
  <data name="profileOriginalGamesWon" xml:space="preserve">
    <value>Original games won</value>
  </data>
  <data name="profileTimeAttackGamesWon" xml:space="preserve">
    <value>Time attack games won: </value>
  </data>
  <data name="profileSuddenDeathGamesWon" xml:space="preserve">
    <value>Sudden death games won: </value>
  </data>
  <data name="profileNumberFriends" xml:space="preserve">
    <value>Number of friends</value>
  </data>
  <data name="lobbyRoomNotFound" xml:space="preserve">
    <value>No game room with that code exists</value>
  </data>
  <data name="lobbyRoomNotFoundTitle" xml:space="preserve">
    <value>Room not found</value>
  </data>
  <data name="verificationCode" xml:space="preserve">
    <value>We sent a code to your email</value>
  </data>
  <data name="verificationEmptyCode" xml:space="preserve">
    <value>The field cannot be empty</value>
  </data>
  <data name="loginVerificationCode" xml:space="preserve">
    <value>Enter the code we sent to your email</value>
  </data>
  <data name="verificationWrongCode" xml:space="preserve">
    <value>Wrong code, try again</value>
  </data>
  <data name="createGameNoTimeLimit" xml:space="preserve">
    <value>No limit</value>
  </data>
  <data name="createGameMinutes" xml:space="preserve">
    <value>minutes</value>
  </data>
  <data name="verificationResendMessage" xml:space="preserve">
    <value>Send code again</value>
  </data>
  <data name="errorUnexpectedError" xml:space="preserve">
    <value>An unexpected error occurred, try again and if the problem persiste, restart the game</value>
  </data>
  <data name="errorOccurredTitle" xml:space="preserve">
    <value>An error occurred</value>
  </data>
  <data name="createGameClassicMode" xml:space="preserve">
    <value>Classic</value>
  </data>
  <data name="createGameSuddenDeathMode" xml:space="preserve">
    <value>Sudden death</value>
  </data>
  <data name="createGameTimeAttackMode" xml:space="preserve">
    <value>Time attack</value>
  </data>
  <data name="createGameSpanishLanguage" xml:space="preserve">
    <value>Spanish</value>
  </data>
  <data name="createGameEnglishLanguage" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="joinGameCantJoinTitle" xml:space="preserve">
    <value>Couldn´t connect to lobby</value>
  </data>
  <data name="joinGameCantJoin" xml:space="preserve">
    <value>The game code is wrong or the lobby is full</value>
  </data>
  <data name="globalClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="globalAccept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="gameLeaveGameTitle" xml:space="preserve">
    <value>Leave game</value>
  </data>
  <data name="gameLeaveGame" xml:space="preserve">
    <value>Are you sure you want to leave?</value>
  </data>
  <data name="gameEndFinished" xml:space="preserve">
    <value>Game finished</value>
  </data>
  <data name="gameEndCalculating" xml:space="preserve">
    <value>Calculating results</value>
  </data>
  <data name="gameEndLeave" xml:space="preserve">
    <value>Leave</value>
  </data>
  <data name="gameEndWinner" xml:space="preserve">
    <value>The winner is</value>
  </data>
  <data name="globalConfiguration" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="configurationPieceColor" xml:space="preserve">
    <value>Piece color</value>
  </data>
  <data name="configurationLanguage" xml:space="preserve">
    <value>App language</value>
  </data>
  <data name="configurationCursor" xml:space="preserve">
    <value>Cursor</value>
  </data>
  <data name="cursorClassic" xml:space="preserve">
    <value>Classic</value>
  </data>
  <data name="cursorPapaya" xml:space="preserve">
    <value>Papaya</value>
  </data>
  <data name="configurationSystemLanguage" xml:space="preserve">
    <value>Same as system</value>
  </data>
  <data name="friendsTitle" xml:space="preserve">
    <value>Friends</value>
  </data>
  <data name="friendsRequestSent" xml:space="preserve">
    <value>The friend request has been sent</value>
  </data>
  <data name="friendsRequestSentTitle" xml:space="preserve">
    <value>Friend request sent</value>
  </data>
</root>