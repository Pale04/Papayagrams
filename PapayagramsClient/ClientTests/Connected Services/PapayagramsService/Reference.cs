//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientTests.PapayagramsService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PapayagramsService.ILoginService")]
    public interface ILoginService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/RegisterUser", ReplyAction="http://tempuri.org/ILoginService/RegisterUserResponse")]
        int RegisterUser(PapayagramsClient.PapayagramsService.PlayerDC player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/RegisterUser", ReplyAction="http://tempuri.org/ILoginService/RegisterUserResponse")]
        System.Threading.Tasks.Task<int> RegisterUserAsync(PapayagramsClient.PapayagramsService.PlayerDC player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Login", ReplyAction="http://tempuri.org/ILoginService/LoginResponse")]
        System.ValueTuple<int, PapayagramsClient.PapayagramsService.PlayerDC> Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Login", ReplyAction="http://tempuri.org/ILoginService/LoginResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<int, PapayagramsClient.PapayagramsService.PlayerDC>> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Logout", ReplyAction="http://tempuri.org/ILoginService/LogoutResponse")]
        int Logout(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Logout", ReplyAction="http://tempuri.org/ILoginService/LogoutResponse")]
        System.Threading.Tasks.Task<int> LogoutAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/VerifyAccount", ReplyAction="http://tempuri.org/ILoginService/VerifyAccountResponse")]
        int VerifyAccount(string username, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/VerifyAccount", ReplyAction="http://tempuri.org/ILoginService/VerifyAccountResponse")]
        System.Threading.Tasks.Task<int> VerifyAccountAsync(string username, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/SendAccountVerificationCode", ReplyAction="http://tempuri.org/ILoginService/SendAccountVerificationCodeResponse")]
        int SendAccountVerificationCode(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/SendAccountVerificationCode", ReplyAction="http://tempuri.org/ILoginService/SendAccountVerificationCodeResponse")]
        System.Threading.Tasks.Task<int> SendAccountVerificationCodeAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/AccessAsGuest", ReplyAction="http://tempuri.org/ILoginService/AccessAsGuestResponse")]
        PapayagramsClient.PapayagramsService.PlayerDC AccessAsGuest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/AccessAsGuest", ReplyAction="http://tempuri.org/ILoginService/AccessAsGuestResponse")]
        System.Threading.Tasks.Task<PapayagramsClient.PapayagramsService.PlayerDC> AccessAsGuestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/SendPasswordRecoveryPIN", ReplyAction="http://tempuri.org/ILoginService/SendPasswordRecoveryPINResponse")]
        int SendPasswordRecoveryPIN(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/SendPasswordRecoveryPIN", ReplyAction="http://tempuri.org/ILoginService/SendPasswordRecoveryPINResponse")]
        System.Threading.Tasks.Task<int> SendPasswordRecoveryPINAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginServiceChannel : ClientTests.PapayagramsService.ILoginService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginServiceClient : System.ServiceModel.ClientBase<ClientTests.PapayagramsService.ILoginService>, ClientTests.PapayagramsService.ILoginService {
        
        public LoginServiceClient() {
        }
        
        public LoginServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int RegisterUser(PapayagramsClient.PapayagramsService.PlayerDC player) {
            return base.Channel.RegisterUser(player);
        }
        
        public System.Threading.Tasks.Task<int> RegisterUserAsync(PapayagramsClient.PapayagramsService.PlayerDC player) {
            return base.Channel.RegisterUserAsync(player);
        }
        
        public System.ValueTuple<int, PapayagramsClient.PapayagramsService.PlayerDC> Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<int, PapayagramsClient.PapayagramsService.PlayerDC>> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public int Logout(string username) {
            return base.Channel.Logout(username);
        }
        
        public System.Threading.Tasks.Task<int> LogoutAsync(string username) {
            return base.Channel.LogoutAsync(username);
        }
        
        public int VerifyAccount(string username, string code) {
            return base.Channel.VerifyAccount(username, code);
        }
        
        public System.Threading.Tasks.Task<int> VerifyAccountAsync(string username, string code) {
            return base.Channel.VerifyAccountAsync(username, code);
        }
        
        public int SendAccountVerificationCode(string username) {
            return base.Channel.SendAccountVerificationCode(username);
        }
        
        public System.Threading.Tasks.Task<int> SendAccountVerificationCodeAsync(string username) {
            return base.Channel.SendAccountVerificationCodeAsync(username);
        }
        
        public PapayagramsClient.PapayagramsService.PlayerDC AccessAsGuest() {
            return base.Channel.AccessAsGuest();
        }
        
        public System.Threading.Tasks.Task<PapayagramsClient.PapayagramsService.PlayerDC> AccessAsGuestAsync() {
            return base.Channel.AccessAsGuestAsync();
        }
        
        public int SendPasswordRecoveryPIN(string username) {
            return base.Channel.SendPasswordRecoveryPIN(username);
        }
        
        public System.Threading.Tasks.Task<int> SendPasswordRecoveryPINAsync(string username) {
            return base.Channel.SendPasswordRecoveryPINAsync(username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PapayagramsService.IMainMenuService", CallbackContract=typeof(ClientTests.PapayagramsService.IMainMenuServiceCallback))]
    public interface IMainMenuService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/GetAllRelationships", ReplyAction="http://tempuri.org/IMainMenuService/GetAllRelationshipsResponse")]
        System.ValueTuple<int, PapayagramsClient.PapayagramsService.FriendDC[]> GetAllRelationships(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/GetAllRelationships", ReplyAction="http://tempuri.org/IMainMenuService/GetAllRelationshipsResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<int, PapayagramsClient.PapayagramsService.FriendDC[]>> GetAllRelationshipsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/SearchNoFriendPlayer", ReplyAction="http://tempuri.org/IMainMenuService/SearchNoFriendPlayerResponse")]
        System.ValueTuple<int, PapayagramsClient.PapayagramsService.PlayerDC> SearchNoFriendPlayer(string searcherUsername, string searchedUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/SearchNoFriendPlayer", ReplyAction="http://tempuri.org/IMainMenuService/SearchNoFriendPlayerResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<int, PapayagramsClient.PapayagramsService.PlayerDC>> SearchNoFriendPlayerAsync(string searcherUsername, string searchedUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/SendFriendRequest", ReplyAction="http://tempuri.org/IMainMenuService/SendFriendRequestResponse")]
        int SendFriendRequest(string senderUsername, string receiverUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/SendFriendRequest", ReplyAction="http://tempuri.org/IMainMenuService/SendFriendRequestResponse")]
        System.Threading.Tasks.Task<int> SendFriendRequestAsync(string senderUsername, string receiverUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/RespondFriendRequest", ReplyAction="http://tempuri.org/IMainMenuService/RespondFriendRequestResponse")]
        int RespondFriendRequest(string respondentUsername, string requesterUsername, bool response);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/RespondFriendRequest", ReplyAction="http://tempuri.org/IMainMenuService/RespondFriendRequestResponse")]
        System.Threading.Tasks.Task<int> RespondFriendRequestAsync(string respondentUsername, string requesterUsername, bool response);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/RemoveFriend", ReplyAction="http://tempuri.org/IMainMenuService/RemoveFriendResponse")]
        int RemoveFriend(string username, string friendUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/RemoveFriend", ReplyAction="http://tempuri.org/IMainMenuService/RemoveFriendResponse")]
        System.Threading.Tasks.Task<int> RemoveFriendAsync(string username, string friendUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/BlockFriend", ReplyAction="http://tempuri.org/IMainMenuService/BlockFriendResponse")]
        int BlockFriend(string username, string friendUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/BlockFriend", ReplyAction="http://tempuri.org/IMainMenuService/BlockFriendResponse")]
        System.Threading.Tasks.Task<int> BlockFriendAsync(string username, string friendUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/UnblockFriend", ReplyAction="http://tempuri.org/IMainMenuService/UnblockFriendResponse")]
        int UnblockFriend(string username, string friendUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/UnblockFriend", ReplyAction="http://tempuri.org/IMainMenuService/UnblockFriendResponse")]
        System.Threading.Tasks.Task<int> UnblockFriendAsync(string username, string friendUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/GetPlayerProfile", ReplyAction="http://tempuri.org/IMainMenuService/GetPlayerProfileResponse")]
        System.ValueTuple<int, PapayagramsClient.PapayagramsService.PlayerStatsDC> GetPlayerProfile(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/GetPlayerProfile", ReplyAction="http://tempuri.org/IMainMenuService/GetPlayerProfileResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<int, PapayagramsClient.PapayagramsService.PlayerStatsDC>> GetPlayerProfileAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/GetAchievements", ReplyAction="http://tempuri.org/IMainMenuService/GetAchievementsResponse")]
        System.ValueTuple<int, PapayagramsClient.PapayagramsService.AchievementDC[]> GetAchievements(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/GetAchievements", ReplyAction="http://tempuri.org/IMainMenuService/GetAchievementsResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<int, PapayagramsClient.PapayagramsService.AchievementDC[]>> GetAchievementsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/GetLeaderboard", ReplyAction="http://tempuri.org/IMainMenuService/GetLeaderboardResponse")]
        int GetLeaderboard(PapayagramsClient.PapayagramsService.PlayerDC player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/GetLeaderboard", ReplyAction="http://tempuri.org/IMainMenuService/GetLeaderboardResponse")]
        System.Threading.Tasks.Task<int> GetLeaderboardAsync(PapayagramsClient.PapayagramsService.PlayerDC player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/ReportToServer", ReplyAction="http://tempuri.org/IMainMenuService/ReportToServerResponse")]
        int ReportToServer(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainMenuService/ReportToServer", ReplyAction="http://tempuri.org/IMainMenuService/ReportToServerResponse")]
        System.Threading.Tasks.Task<int> ReportToServerAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainMenuServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMainMenuService/ReceiveFriendRequest")]
        void ReceiveFriendRequest(PapayagramsClient.PapayagramsService.PlayerDC player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMainMenuService/ReceiveGameInvitation")]
        void ReceiveGameInvitation(PapayagramsClient.PapayagramsService.GameInvitationDC invitation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainMenuServiceChannel : ClientTests.PapayagramsService.IMainMenuService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainMenuServiceClient : System.ServiceModel.DuplexClientBase<ClientTests.PapayagramsService.IMainMenuService>, ClientTests.PapayagramsService.IMainMenuService {
        
        public MainMenuServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MainMenuServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MainMenuServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MainMenuServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MainMenuServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public System.ValueTuple<int, PapayagramsClient.PapayagramsService.FriendDC[]> GetAllRelationships(string username) {
            return base.Channel.GetAllRelationships(username);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<int, PapayagramsClient.PapayagramsService.FriendDC[]>> GetAllRelationshipsAsync(string username) {
            return base.Channel.GetAllRelationshipsAsync(username);
        }
        
        public System.ValueTuple<int, PapayagramsClient.PapayagramsService.PlayerDC> SearchNoFriendPlayer(string searcherUsername, string searchedUsername) {
            return base.Channel.SearchNoFriendPlayer(searcherUsername, searchedUsername);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<int, PapayagramsClient.PapayagramsService.PlayerDC>> SearchNoFriendPlayerAsync(string searcherUsername, string searchedUsername) {
            return base.Channel.SearchNoFriendPlayerAsync(searcherUsername, searchedUsername);
        }
        
        public int SendFriendRequest(string senderUsername, string receiverUsername) {
            return base.Channel.SendFriendRequest(senderUsername, receiverUsername);
        }
        
        public System.Threading.Tasks.Task<int> SendFriendRequestAsync(string senderUsername, string receiverUsername) {
            return base.Channel.SendFriendRequestAsync(senderUsername, receiverUsername);
        }
        
        public int RespondFriendRequest(string respondentUsername, string requesterUsername, bool response) {
            return base.Channel.RespondFriendRequest(respondentUsername, requesterUsername, response);
        }
        
        public System.Threading.Tasks.Task<int> RespondFriendRequestAsync(string respondentUsername, string requesterUsername, bool response) {
            return base.Channel.RespondFriendRequestAsync(respondentUsername, requesterUsername, response);
        }
        
        public int RemoveFriend(string username, string friendUsername) {
            return base.Channel.RemoveFriend(username, friendUsername);
        }
        
        public System.Threading.Tasks.Task<int> RemoveFriendAsync(string username, string friendUsername) {
            return base.Channel.RemoveFriendAsync(username, friendUsername);
        }
        
        public int BlockFriend(string username, string friendUsername) {
            return base.Channel.BlockFriend(username, friendUsername);
        }
        
        public System.Threading.Tasks.Task<int> BlockFriendAsync(string username, string friendUsername) {
            return base.Channel.BlockFriendAsync(username, friendUsername);
        }
        
        public int UnblockFriend(string username, string friendUsername) {
            return base.Channel.UnblockFriend(username, friendUsername);
        }
        
        public System.Threading.Tasks.Task<int> UnblockFriendAsync(string username, string friendUsername) {
            return base.Channel.UnblockFriendAsync(username, friendUsername);
        }
        
        public System.ValueTuple<int, PapayagramsClient.PapayagramsService.PlayerStatsDC> GetPlayerProfile(string username) {
            return base.Channel.GetPlayerProfile(username);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<int, PapayagramsClient.PapayagramsService.PlayerStatsDC>> GetPlayerProfileAsync(string username) {
            return base.Channel.GetPlayerProfileAsync(username);
        }
        
        public System.ValueTuple<int, PapayagramsClient.PapayagramsService.AchievementDC[]> GetAchievements(string username) {
            return base.Channel.GetAchievements(username);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<int, PapayagramsClient.PapayagramsService.AchievementDC[]>> GetAchievementsAsync(string username) {
            return base.Channel.GetAchievementsAsync(username);
        }
        
        public int GetLeaderboard(PapayagramsClient.PapayagramsService.PlayerDC player) {
            return base.Channel.GetLeaderboard(player);
        }
        
        public System.Threading.Tasks.Task<int> GetLeaderboardAsync(PapayagramsClient.PapayagramsService.PlayerDC player) {
            return base.Channel.GetLeaderboardAsync(player);
        }
        
        public int ReportToServer(string username) {
            return base.Channel.ReportToServer(username);
        }
        
        public System.Threading.Tasks.Task<int> ReportToServerAsync(string username) {
            return base.Channel.ReportToServerAsync(username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PapayagramsService.IPregameService", CallbackContract=typeof(ClientTests.PapayagramsService.IPregameServiceCallback))]
    public interface IPregameService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregameService/CreateGame", ReplyAction="http://tempuri.org/IPregameService/CreateGameResponse")]
        System.ValueTuple<int, PapayagramsClient.PapayagramsService.GameRoomDC> CreateGame(string username, PapayagramsClient.PapayagramsService.GameConfigurationDC gameConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregameService/CreateGame", ReplyAction="http://tempuri.org/IPregameService/CreateGameResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<int, PapayagramsClient.PapayagramsService.GameRoomDC>> CreateGameAsync(string username, PapayagramsClient.PapayagramsService.GameConfigurationDC gameConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregameService/JoinGame", ReplyAction="http://tempuri.org/IPregameService/JoinGameResponse")]
        System.ValueTuple<int, PapayagramsClient.PapayagramsService.GameRoomDC> JoinGame(string username, string roomCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregameService/JoinGame", ReplyAction="http://tempuri.org/IPregameService/JoinGameResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<int, PapayagramsClient.PapayagramsService.GameRoomDC>> JoinGameAsync(string username, string roomCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregameService/LeaveLobby", ReplyAction="http://tempuri.org/IPregameService/LeaveLobbyResponse")]
        int LeaveLobby(string username, string roomCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregameService/LeaveLobby", ReplyAction="http://tempuri.org/IPregameService/LeaveLobbyResponse")]
        System.Threading.Tasks.Task<int> LeaveLobbyAsync(string username, string roomCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPregameService/SendMessage")]
        void SendMessage(PapayagramsClient.PapayagramsService.Message message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPregameService/SendMessage")]
        System.Threading.Tasks.Task SendMessageAsync(PapayagramsClient.PapayagramsService.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregameService/StartGame", ReplyAction="http://tempuri.org/IPregameService/StartGameResponse")]
        void StartGame(string roomCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregameService/StartGame", ReplyAction="http://tempuri.org/IPregameService/StartGameResponse")]
        System.Threading.Tasks.Task StartGameAsync(string roomCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregameService/InviteFriend", ReplyAction="http://tempuri.org/IPregameService/InviteFriendResponse")]
        void InviteFriend(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregameService/InviteFriend", ReplyAction="http://tempuri.org/IPregameService/InviteFriendResponse")]
        System.Threading.Tasks.Task InviteFriendAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregameService/ReturnToLobby", ReplyAction="http://tempuri.org/IPregameService/ReturnToLobbyResponse")]
        void ReturnToLobby(string gameRoomCode, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPregameService/ReturnToLobby", ReplyAction="http://tempuri.org/IPregameService/ReturnToLobbyResponse")]
        System.Threading.Tasks.Task ReturnToLobbyAsync(string gameRoomCode, string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPregameServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPregameService/ReceiveMessage")]
        void ReceiveMessage(PapayagramsClient.PapayagramsService.Message message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPregameService/CarryInsideGame")]
        void CarryInsideGame();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPregameService/RefreshLobby")]
        void RefreshLobby(PapayagramsClient.PapayagramsService.GameRoomDC gameRoom);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPregameServiceChannel : ClientTests.PapayagramsService.IPregameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PregameServiceClient : System.ServiceModel.DuplexClientBase<ClientTests.PapayagramsService.IPregameService>, ClientTests.PapayagramsService.IPregameService {
        
        public PregameServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public PregameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public PregameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PregameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PregameServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public System.ValueTuple<int, PapayagramsClient.PapayagramsService.GameRoomDC> CreateGame(string username, PapayagramsClient.PapayagramsService.GameConfigurationDC gameConfiguration) {
            return base.Channel.CreateGame(username, gameConfiguration);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<int, PapayagramsClient.PapayagramsService.GameRoomDC>> CreateGameAsync(string username, PapayagramsClient.PapayagramsService.GameConfigurationDC gameConfiguration) {
            return base.Channel.CreateGameAsync(username, gameConfiguration);
        }
        
        public System.ValueTuple<int, PapayagramsClient.PapayagramsService.GameRoomDC> JoinGame(string username, string roomCode) {
            return base.Channel.JoinGame(username, roomCode);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<int, PapayagramsClient.PapayagramsService.GameRoomDC>> JoinGameAsync(string username, string roomCode) {
            return base.Channel.JoinGameAsync(username, roomCode);
        }
        
        public int LeaveLobby(string username, string roomCode) {
            return base.Channel.LeaveLobby(username, roomCode);
        }
        
        public System.Threading.Tasks.Task<int> LeaveLobbyAsync(string username, string roomCode) {
            return base.Channel.LeaveLobbyAsync(username, roomCode);
        }
        
        public void SendMessage(PapayagramsClient.PapayagramsService.Message message) {
            base.Channel.SendMessage(message);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(PapayagramsClient.PapayagramsService.Message message) {
            return base.Channel.SendMessageAsync(message);
        }
        
        public void StartGame(string roomCode) {
            base.Channel.StartGame(roomCode);
        }
        
        public System.Threading.Tasks.Task StartGameAsync(string roomCode) {
            return base.Channel.StartGameAsync(roomCode);
        }
        
        public void InviteFriend(string username) {
            base.Channel.InviteFriend(username);
        }
        
        public System.Threading.Tasks.Task InviteFriendAsync(string username) {
            return base.Channel.InviteFriendAsync(username);
        }
        
        public void ReturnToLobby(string gameRoomCode, string username) {
            base.Channel.ReturnToLobby(gameRoomCode, username);
        }
        
        public System.Threading.Tasks.Task ReturnToLobbyAsync(string gameRoomCode, string username) {
            return base.Channel.ReturnToLobbyAsync(gameRoomCode, username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PapayagramsService.IGameService", CallbackContract=typeof(ClientTests.PapayagramsService.IGameServiceCallback))]
    public interface IGameService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/ReachServer")]
        void ReachServer(string username, string gameRoomCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/ReachServer")]
        System.Threading.Tasks.Task ReachServerAsync(string username, string gameRoomCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/DumpPiece")]
        void DumpPiece(string gameRoomCode, string username, char piece);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/DumpPiece")]
        System.Threading.Tasks.Task DumpPieceAsync(string gameRoomCode, string username, char piece);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/TakeSeed")]
        void TakeSeed(string gameRoomCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/TakeSeed")]
        System.Threading.Tasks.Task TakeSeedAsync(string gameRoomCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/ShoutPapaya")]
        void ShoutPapaya(string gameRoomCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/ShoutPapaya")]
        System.Threading.Tasks.Task ShoutPapayaAsync(string gameRoomCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/CalculateWinner")]
        void CalculateWinner(string gameRoomCode, string username, int score);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/CalculateWinner")]
        System.Threading.Tasks.Task CalculateWinnerAsync(string gameRoomCode, string username, int score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/LeaveGame", ReplyAction="http://tempuri.org/IGameService/LeaveGameResponse")]
        void LeaveGame(string gameRoomCode, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/LeaveGame", ReplyAction="http://tempuri.org/IGameService/LeaveGameResponse")]
        System.Threading.Tasks.Task LeaveGameAsync(string gameRoomCode, string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/RefreshGameRoom")]
        void RefreshGameRoom(int piecesNumber, PapayagramsClient.PapayagramsService.PlayerDC[] connectedPlayers);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/RefreshTimer")]
        void RefreshTimer(int remainingMinutes);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/AddSeedsToHand")]
        void AddSeedsToHand(char[] initalPieces);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/NotifyEndOfGame")]
        void NotifyEndOfGame();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/EndGame")]
        void EndGame(string winnerUsername, int score);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceChannel : ClientTests.PapayagramsService.IGameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameServiceClient : System.ServiceModel.DuplexClientBase<ClientTests.PapayagramsService.IGameService>, ClientTests.PapayagramsService.IGameService {
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void ReachServer(string username, string gameRoomCode) {
            base.Channel.ReachServer(username, gameRoomCode);
        }
        
        public System.Threading.Tasks.Task ReachServerAsync(string username, string gameRoomCode) {
            return base.Channel.ReachServerAsync(username, gameRoomCode);
        }
        
        public void DumpPiece(string gameRoomCode, string username, char piece) {
            base.Channel.DumpPiece(gameRoomCode, username, piece);
        }
        
        public System.Threading.Tasks.Task DumpPieceAsync(string gameRoomCode, string username, char piece) {
            return base.Channel.DumpPieceAsync(gameRoomCode, username, piece);
        }
        
        public void TakeSeed(string gameRoomCode) {
            base.Channel.TakeSeed(gameRoomCode);
        }
        
        public System.Threading.Tasks.Task TakeSeedAsync(string gameRoomCode) {
            return base.Channel.TakeSeedAsync(gameRoomCode);
        }
        
        public void ShoutPapaya(string gameRoomCode) {
            base.Channel.ShoutPapaya(gameRoomCode);
        }
        
        public System.Threading.Tasks.Task ShoutPapayaAsync(string gameRoomCode) {
            return base.Channel.ShoutPapayaAsync(gameRoomCode);
        }
        
        public void CalculateWinner(string gameRoomCode, string username, int score) {
            base.Channel.CalculateWinner(gameRoomCode, username, score);
        }
        
        public System.Threading.Tasks.Task CalculateWinnerAsync(string gameRoomCode, string username, int score) {
            return base.Channel.CalculateWinnerAsync(gameRoomCode, username, score);
        }
        
        public void LeaveGame(string gameRoomCode, string username) {
            base.Channel.LeaveGame(gameRoomCode, username);
        }
        
        public System.Threading.Tasks.Task LeaveGameAsync(string gameRoomCode, string username) {
            return base.Channel.LeaveGameAsync(gameRoomCode, username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PapayagramsService.IGameCodeVerificationService")]
    public interface IGameCodeVerificationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameCodeVerificationService/VerifyGameRoom", ReplyAction="http://tempuri.org/IGameCodeVerificationService/VerifyGameRoomResponse")]
        bool VerifyGameRoom(string gameCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameCodeVerificationService/VerifyGameRoom", ReplyAction="http://tempuri.org/IGameCodeVerificationService/VerifyGameRoomResponse")]
        System.Threading.Tasks.Task<bool> VerifyGameRoomAsync(string gameCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameCodeVerificationServiceChannel : ClientTests.PapayagramsService.IGameCodeVerificationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameCodeVerificationServiceClient : System.ServiceModel.ClientBase<ClientTests.PapayagramsService.IGameCodeVerificationService>, ClientTests.PapayagramsService.IGameCodeVerificationService {
        
        public GameCodeVerificationServiceClient() {
        }
        
        public GameCodeVerificationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GameCodeVerificationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameCodeVerificationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameCodeVerificationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool VerifyGameRoom(string gameCode) {
            return base.Channel.VerifyGameRoom(gameCode);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyGameRoomAsync(string gameCode) {
            return base.Channel.VerifyGameRoomAsync(gameCode);
        }
    }
}
